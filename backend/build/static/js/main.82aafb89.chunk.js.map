{"version":3,"sources":["stores/UserStore.js","InputField.js","SubmitButton.js","LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["extendObservable","this","loading","isLoggedIn","username","InputField","className","type","props","placeholder","value","onChange","e","target","React","Component","SubmitButton","disabled","onClick","text","LoginForm","state","password","buttonDisabled","property","val","trim","length","setState","a","fetch","method","headers","body","JSON","stringify","res","json","result","success","UserStore","resetForm","alert","msg","console","log","setInputValue","doLogin","App","header","doLogout","observer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.82aafb89.chunk.js","sourcesContent":["import  { extendObservable } from 'mobx';\r\n\r\nclass UserStore {\r\n    constructor() {\r\n        extendObservable (this, {\r\n            loading: true,\r\n            isLoggedIn: false,\r\n            username: ''\r\n        }\r\n        )\r\n    }\r\n}\r\n\r\nexport default new UserStore();","import React from 'react';\r\nimport UserStore from './stores/UserStore';\r\n\r\nclass InputField extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className = \"inputField\">\r\n        <input\r\n          className = 'input'\r\n          type = {this.props.type}\r\n          placeholder = {this.props.placeholder}\r\n          value = {this.props.value}\r\n          onChange = {(e) => this.props.onChange(e.target.value)}\r\n        />\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputField;","import React from 'react';\r\nimport UserStore from './stores/UserStore';\r\n\r\nclass SubmitButton extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className = \"submitButton\">\r\n        <button\r\n          className = 'btn'\r\n          disabled = {this.props.disabled}\r\n          onClick = {() => this.props.onClick() }  \r\n        >\r\n          {this.props.text}\r\n\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SubmitButton;","import React from 'react';\r\nimport InputField from './InputField';\r\nimport SubmitButton from './SubmitButton';\r\nimport UserStore from './stores/UserStore';\r\n\r\nclass LoginForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      buttonDisabled: false\r\n    }\r\n  }\r\n\r\n  setInputValue(property, val) {\r\n    val = val.trim();\r\n    if(val.length > 12) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      [property]: val\r\n    })\r\n  }\r\n\r\n  resetForm() {\r\n    this.setState({\r\n      username: '',\r\n      password:'',\r\n      buttonDisabled: false\r\n    })\r\n  }\r\n\r\n\r\n  async doLogin() {\r\n    if(!this.state.username) {\r\n      return;\r\n    }\r\n    if(!this.state.password) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      buttonDisabled: true\r\n    })\r\n    try{\r\n      let res = await fetch('/login', {\r\n        method: 'post',\r\n        headers: {\r\n          'Accept' : 'application/json',\r\n          'Content-Type' : 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          username: this.state.username,\r\n          password: this.state.password\r\n        })\r\n      });\r\n\r\n      let result = await res.json();\r\n      if(result && result.success) {\r\n        UserStore.isLoggedIn = true;\r\n        UserStore.username = result.username;\r\n\r\n      }\r\n      else if (result && result.success === false) {\r\n        this.resetForm();\r\n        alert(result.msg);\r\n      }\r\n    } \r\n    catch(e) {\r\n      console.log(e);\r\n      this.resetForm();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className = \"loginForm\">\r\n        Log in\r\n        <InputField\r\n          type = 'text'\r\n          placeholder = 'Username'\r\n          value = {this.state.username ? this.state.username : ''}\r\n          onChange = {(val) => this.setInputValue('username', val) }   \r\n        />\r\n\r\n        <InputField\r\n          type = 'password'\r\n          placeholder = 'Password'\r\n          value = {this.state.password ? this.state.password : ''}\r\n          onChange = {(val) => this.setInputValue('password', val) }   \r\n        />\r\n\r\n        <SubmitButton\r\n          text = 'Login'\r\n          disabled = {this.state.buttonDisabled}\r\n          onClick = { () => this.doLogin()}  \r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;","import React from 'react';\nimport { observer } from 'mobx-react';\nimport UserStore from './stores/UserStore';\nimport LoginForm from './LoginForm';\nimport SubmitButton from './SubmitButton';\nimport './App.css';\n\nclass App extends React.Component {\n  async componentDidMount() {\n    try{\n      let res = await fetch ('/isLoggedIn', {\n        method: 'post',\n        header:{\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      let result = await res.json();\n      if(result && result.success) {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = true;\n        UserStore.username = result.username;\n      }\n      else {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = false;\n      }\n    }\n    catch(e) {\n      UserStore.loading = false;\n      UserStore.isLoggedIn = false; \n    }\n  }\n\n  async doLogout() {\n    try{\n      let res = await fetch ('/logout', {\n        method: 'post',\n        header:{\n          'Accept': 'application/json',\n          'Content-type': 'application/json'\n        }\n      });\n      let result = await res.json();\n      if(result && result.success) {\n        UserStore.isLoggedIn = false;\n        UserStore.username = '';\n      }\n    }\n    catch(e) {\n      console.log(e);\n    }\n  }\n  render() {\n    if(UserStore.loading) {\n      return(\n        <div className = \"app\">\n          <div className = 'container'>\n            Loading, please wait...\n          </div>\n        </div>\n      );\n    } else {\n          if(UserStore.isLoggedIn) {\n            return(\n              <div className = \"app\">\n                <div className = 'container'>\n                  Welcome {UserStore.username}\n                  <SubmitButton \n                    text = {'Log out'}\n                    disabled = {false}\n                    onClick = {() => this.doLogout()}\n                  />\n                </div>\n              </div>\n            );\n          }\n\n          return(\n          <div className = \"app\">\n            <div className = 'container'>\n              <LoginForm />\n            </div>\n          </div>\n          );\n    }\n  }\n}\n\nexport default observer(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}